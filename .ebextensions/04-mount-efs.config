files:
  # Mount EFS drives
  "/opt/elasticbeanstalk/hooks/appdeploy/post/mount_efs.sh":
    mode: "000755"
    content : |
      #!/bin/bash

      EFS_REGION=$(/opt/elasticbeanstalk/bin/get-config environment -k REGION)
      EFS_FILE_SYSTEM_ID=$(/opt/elasticbeanstalk/bin/get-config environment -k EFS_ID)
      EFS_MOUNT_DIR=/efs
      APP_STORAGE_DIR=$(/opt/elasticbeanstalk/bin/get-config environment -k APP_STORAGE_DIR)

      echo $(/opt/elasticbeanstalk/bin/get-config environment -k TEST_ENV_VAR)

      echo "Mounting EFS filesystem ${EFS_DNS_NAME} to directory ${EFS_MOUNT_DIR} ..."

      echo 'Stopping NFS ID Mapper...'
      service rpcidmapd status &> /dev/null
      if [ $? -ne 0 ] ; then
        echo 'rpc.idmapd is already stopped!'
      else
        service rpcidmapd stop
        if [ $? -ne 0 ] ; then
          echo 'ERROR: Failed to stop NFS ID Mapper!'
          exit 1
        fi
      fi

      echo 'Checking if EFS mount directory exists...'
      if [ ! -d ${EFS_MOUNT_DIR} ]; then
        echo "Creating directory ${EFS_MOUNT_DIR} ..."
        mkdir -p ${EFS_MOUNT_DIR}
        if [ $? -ne 0 ]; then
          echo 'ERROR: Directory creation failed!'
          exit 1
        fi
      else
        echo "Directory ${EFS_MOUNT_DIR} already exists!"
      fi

      mountpoint -q ${EFS_MOUNT_DIR}
      if [ $? -ne 0 ]; then
        echo "mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${EFS_FILE_SYSTEM_ID}.efs.${EFS_REGION}.amazonaws.com:/ ${EFS_MOUNT_DIR}"
        mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${EFS_FILE_SYSTEM_ID}.efs.${EFS_REGION}.amazonaws.com:/ ${EFS_MOUNT_DIR}
        if [ $? -ne 0 ] ; then
          echo 'ERROR: Mount command failed!'
          exit 1
        fi
        chmod 777 ${EFS_MOUNT_DIR}
        runuser -l  ec2-user -c "touch ${EFS_MOUNT_DIR}/it_works"
        if [[ $? -ne 0 ]]; then
          echo 'ERROR: Permission Error!'
          exit 1
        else
          runuser -l  ec2-user -c "rm -f ${EFS_MOUNT_DIR}/it_works"
        fi
      else
        echo "Directory ${EFS_MOUNT_DIR} is already a valid mountpoint!"
      fi

      echo 'EFS mount complete.'

      # App Storage Directory
      echo "Creating laravel directory structure in EFS"
      sudo mkdir -p ${EFS_MOUNT_DIR}
      sudo mkdir -p ${EFS_MOUNT_DIR}/logs

      # Make sure the log file exists
      touch ${EFS_MOUNT_DIR}/logs/symfony.log

      # Set web user ownership and permissions of EFS drive
      echo 'Setting EFS permission for Laravel'
      sudo chown -R webapp:webapp ${EFS_MOUNT_DIR}
      sudo chmod -R ug+rwx ${EFS_MOUNT_DIR}/storage

      # Add the ec2 user to the webapp group
      sudo usermod -a -G webapp ec2-user

      # Remove the app storage directory if it exists so it can be replaced with the symlink to efs
      sudo rm -rf ${APP_STORAGE_DIR}

      # Symlink efs to the app directory
      echo 'Creating symlinks to app directory'
      sudo ln -sf ${EFS_MOUNT_DIR} ${APP_STORAGE_DIR}
